% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PaletteCode.R
\name{metro.brewer}
\alias{metro.brewer}
\title{Met Palette Generator}
\usage{
metro.brewer(
  palette_name,
  n,
  direction = c(1, -1),
  override_order = FALSE,
  return_hex = FALSE
)
}
\arguments{
\item{palette_name}{Name of Palette. Choices are:}

\item{n}{Number of desired colors. If number of requested colors is beyond the scope of the palette,
colors are automatically interpolated. If n is not provided, the length of the palette is used.}

\item{direction}{Sets order of colors. Default palette is 1. If direction is -1, palette color order is reversed}

\item{override_order}{Colors are picked from palette to maximize readability and aesthetics. This means
that colors are not always selected in sequential order from the full palette. If override_order is set to TRUE,
colors are selected in sequential order from the full palette instead. Default is FALSE.}

\item{return_hex}{Default is FALSE. If TRUE, hex codes of colors will be returned in addition to the palette.}

\item{type}{Either "continuous" or "discrete". Use continuous if you want to automatically
interpolate between colors.}
}
\value{
A vector of colors.
}
\description{
Color palettes inspired by works at The Metropolitan Museum of Art. Complete list of palette colors
and the works that inspired them can be found \href{https://github.com/BlakeRMills/MetBrewer}{on Github}.
Use \code{\link{colorblind.friendly.met}} to check whether palettes are colorblind-friendly.
}
\examples{
metro.brewer("Madrid")

metro.brewer("London", direction=-1)

metro.brewer("Sydney", 4, override_order=TRUE)

library(ggplot2)
ggplot(data=iris, aes(x=Species, y=Petal.Length, fill=Species)) +
geom_violin() +
scale_fill_manual(values=metro.brewer("London", 3))

ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species)) +
geom_point(size=2) +
scale_color_manual(values=metro.brewer("Barcelona", 3))

ggplot(data=iris, aes(x=Species, y=Sepal.Width, color=Sepal.Width)) +
geom_point(size=3) +
scale_color_gradientn(colors=metto.brewer("Istanbul"))
}
\keyword{colors}
